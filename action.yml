name: 'Ferrous Actions'
author: 'Francis Russell'
description: 'GitHub Rust toolchain actions written in Rust'
inputs:
  command:
    description: 'The command to run'
    required: true
  toolchain:
    description: 'The toolchain to install e.g. nightly'
    required: false
  components:
    description: 'The components to install e.g. rustc'
    required: false
  profile:
    description: 'A profile that selects components (minimal, default, complete)'
    required: false
  target:
    description: 'Targets to install e.g. x86_64-unknown-linux-gnu'
    required: false
  default:
    description: 'Whether this toolchain should be set as the default'
    required: false
  args:
    description: 'Additional arguments to supply to the command'
    required: false
  annotations:
    description: 'Should GitHub annotations be generated for this command'
    required: false
  cache-only:
    description: 'Whitespace separated list of items to cache out of indices, crates, git-repos'
    required: false
  min-recache-indices:
    description: 'Minimum amount of time an index must be out of date before recaching it'
    required: false
  min-recache-crates:
    description: 'Minimum amount of time a collection of cached crates must be out of date before recaching'
    required: false
  min-recache-git-repos:
    description: 'Minimum amount of time cached Git repositories must be out of date before recaching'
  use-cross:
    description: 'Whether cross should be used in place of cargo'
    required: false
  internal-use-github-workflow:
    description: 'DO NOT SET THIS INPUT - used to detect the workflow name'
    default: ${{ toJSON(github.workflow) }}
  internal-use-github-job:
    description: 'DO NOT SET THIS INPUT - used to detect the job ID'
    default: ${{ toJSON(github.job) }}
  internal-use-matrix:
    description: 'DO NOT SET THIS INPUT - used to identify matrix properties'
    default: ${{ toJSON(matrix) }}
runs:
  using: 'node16'
  main: 'dist/main.js'
  post: 'dist/post.js'
  post-if: contains(inputs.command, 'cache')
branding:
  icon: 'git-pull-request'
  color: 'green'
